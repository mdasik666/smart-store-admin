{"version":3,"file":"static/js/366.c3163157.chunk.js","mappings":"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","sources":["custom/components/SnackbarAlert.tsx","pages/User/Forgotpass/Uforgotpass.tsx","services/Userservice.tsx"],"sourcesContent":["import { Alert, Snackbar } from \"@mui/material\";\r\n\r\nconst SnackbarAlert = (props: any) => {\r\n  const { snackopen, setSnackOpen } = props\r\n  \r\n  const handleClose = (_event?: React.SyntheticEvent | Event, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setSnackOpen({ open: false, severity: undefined, message: \"\" });\r\n  };\r\n  return (\r\n    snackopen.open && <Snackbar open={snackopen.open} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\r\n      <Alert onClose={handleClose} severity={snackopen.severity} sx={{ width: '100%' }}>\r\n        {snackopen.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default SnackbarAlert;","import SnackbarAlert from \"custom/components/SnackbarAlert\";\r\nimport { userForgotPassword } from \"services/Userservice\";\r\nimport { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { FieldValues, useForm } from 'react-hook-form'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { IPropsError } from \"../../Interface\";\r\nimport { AxiosError } from \"axios\";\r\n\r\nconst Uforgotpassword = () => {\r\n  const nav = useNavigate()\r\n  const { handleSubmit, register, formState: { errors, isValid } } = useForm({\r\n    mode: \"onChange\",\r\n  })\r\n\r\n  const [isLoading, setLoading] = useState<boolean>(false)\r\n  const [snackopen, setSnackOpen] = useState<IPropsError>({ open: false, severity: undefined, message: \"\" })\r\n  const forgotPassword = async (data: FieldValues) => {\r\n    try {\r\n      setLoading(true)\r\n      const forgot = await userForgotPassword(data.email)\r\n      if (forgot.data.status === \"Success\") {\r\n        localStorage.setItem(\"forgottoken\",forgot.data.token)\r\n        setSnackOpen({ open: true, severity: \"success\", message: forgot.data.message })\r\n        nav(\"/user/reset\")\r\n      } else {\r\n        setSnackOpen({ open: true, severity: \"error\", message: forgot.data.message })        \r\n      }\r\n      setLoading(false)\r\n    } catch (error: unknown) {\r\n      setSnackOpen({ open: true, severity: \"warning\", message: (error as AxiosError).message })\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Forgot Password</title>\r\n        <link rel=\"stylesheet\" href=\"/assets/css/Forgotpass.css\" />\r\n      </Helmet>\r\n      <section id=\"login\">\r\n        <div className=\"logWrapper\">\r\n          <div className=\"login-wrap pt-5 pb-3\">\r\n            <div className=\"img d-flex align-items-center justify-content-center\"\r\n              style={{ backgroundImage: 'url(\"/assets/images/logo.png\")' }}></div>\r\n            <h1 className=\"text-left mb-0\">Forgot Password</h1>\r\n            <form onSubmit={handleSubmit(forgotPassword)} className=\"login-form\">\r\n              <div className=\"Wrap_white\">\r\n                <div className=\"form-group\">\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"forgotMail\" className=\"form-label text-bold\">Email</label>\r\n                    <input type=\"email\" {...register('email', { required: 'Email is mandatory' })} className=\"form-control\" id=\"forgotMail\" placeholder=\"Enter your Email\" />\r\n                    {Boolean(errors?.email) && <small className=\"form-text text-danger\" style={{ color: \"red 1important\" }}>{errors?.email && errors.email?.message?.toString() }</small>}\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-center align-items-center mt-4 pt-2\" id=\"btnsWrap\">\r\n                    <button type=\"submit\" disabled={!isValid || isLoading} className=\"btn btn-primary btn-lg\">Submit</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <SnackbarAlert snackopen={snackopen} setSnackOpen={setSnackOpen} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Uforgotpassword;","import { IPropsOrders } from \"pages/Interface\"\r\nimport axiosInstance from \"./axiosInstance\"\r\n\r\nexport const userRegister = async (emailtoken: string, data: object) => {\r\n    return await axiosInstance.post(`/user/register/${emailtoken}`, data)\r\n}\r\n\r\nexport const userLogin = async (data: object) => {\r\n    return await axiosInstance.post('/user/login', data)\r\n}\r\n\r\nexport const userLoginVerify = async (token: string) => {\r\n    return await axiosInstance.get(`/user/dashboard/${token}`)\r\n}\r\n\r\nexport const userGetAllProducts = async () => {\r\n    return await axiosInstance.get(`/user/getproducts`)\r\n}\r\n\r\nexport const userGetProducts = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/getproducts/${userId}`)\r\n}\r\n\r\nexport const userOTPVerify = async (email: string) => {\r\n    return await axiosInstance.get(`/user/verifyotp/${email}`)\r\n}\r\n\r\nexport const userGetCategoryList = async () => {\r\n    return await axiosInstance.get(`/user/productcategory`)\r\n}\r\n\r\nexport const userAddOrDeleteWishList = async (userId: string, prodId: string) => {\r\n    return await axiosInstance.get(`/user/addordeletewishlist/${userId}/${prodId}`)\r\n}\r\n\r\nexport const userAddOrDeleteCart = async (userId: string, prodId: string) => {\r\n    return await axiosInstance.get(`/user/addordeletecart/${userId}/${prodId}`)\r\n}\r\n\r\nexport const userGetWishList = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/getwishlist/${userId}`)\r\n}\r\n\r\nexport const userGetCart = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/getcart/${userId}`)\r\n}\r\n\r\nexport const userProfileupdate = async (userId: string, data: object) => {\r\n    return await axiosInstance.put(`/user/profileupdate/${userId}`, data)\r\n}\r\n\r\nexport const userPostCheckOut = async (userId: string, data: object) => {\r\n    return await axiosInstance.post(`/user/checkout/${userId}`, data)\r\n}\r\n\r\nexport const userGetCheckOut = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/checkout/${userId}`)\r\n}\r\n\r\nexport const userGetCountryList = async () => {\r\n    return await axiosInstance.get(`https://restcountries.com/v3.1/all`)\r\n}\r\n\r\nexport const userGetShippingAddress = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/shipping/${userId}`)\r\n}\r\n\r\nexport const userPostShippingAddress = async (userId: string, data: object) => {\r\n    return await axiosInstance.post(`/user/shipping/${userId}`, data)\r\n}\r\n\r\nexport const userPaymentOrders = async (data: object) => {\r\n    return await axiosInstance.post(`/user/payment/orders`, data)\r\n}\r\n\r\nexport const userPaymentVerify = async (userId: string, data: object) => {\r\n    return await axiosInstance.post(`/user/payment/verify/${userId}`, data)\r\n}\r\n\r\nexport const userForgotPassword = async (userEmail: string) => {\r\n    return await axiosInstance.get(`/user/forgotpassword/${userEmail}`)\r\n}\r\n\r\nexport const userVerifyForgotPassword = async (forgottoken: string) => {\r\n    return await axiosInstance.get(`/user/verifyforgotpassword/${forgottoken}`)\r\n}\r\n\r\nexport const userUpdatePassword = async (data: object) => {\r\n    return await axiosInstance.post(`/user/updatepassword/`, data)\r\n}\r\n\r\nexport const userOrderList = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/orderlist/${userId}`)\r\n}\r\n\r\nexport const userGetOrder = async (id: string) => {\r\n    return await axiosInstance.get(`/user/getorder/${id}`)\r\n}\r\n\r\nexport const userDownloadInvoice = async (data: IPropsOrders) => {\r\n    return await axiosInstance.post(`/user/downloadinvoice`, { orderData: data }, {\r\n        responseType: 'blob',\r\n    })\r\n}\r\n"],"names":["props","snackopen","setSnackOpen","handleClose","_event","reason","open","severity","undefined","message","_jsx","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","children","Alert","sx","width","Uforgotpassword","_errors$email","_errors$email$message","nav","useNavigate","handleSubmit","register","formState","errors","isValid","useForm","mode","isLoading","setLoading","useState","_jsxs","_Fragment","Helmet","rel","href","id","className","style","backgroundImage","onSubmit","async","forgot","userForgotPassword","data","email","status","localStorage","setItem","token","error","htmlFor","type","required","placeholder","Boolean","color","toString","disabled","SnackbarAlert","userRegister","emailtoken","axiosInstance","post","concat","userLogin","userLoginVerify","get","userGetAllProducts","userGetProducts","userId","userOTPVerify","userGetCategoryList","userAddOrDeleteWishList","prodId","userAddOrDeleteCart","userGetCart","userProfileupdate","put","userPostCheckOut","userGetCheckOut","userGetCountryList","userGetShippingAddress","userPostShippingAddress","userPaymentOrders","userPaymentVerify","userEmail","userVerifyForgotPassword","forgottoken","userUpdatePassword","userOrderList","userGetOrder","userDownloadInvoice","orderData","responseType"],"sourceRoot":""}