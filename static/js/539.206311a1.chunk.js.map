{"version":3,"file":"static/js/539.206311a1.chunk.js","mappings":"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","sources":["components/Admindrawer/Admindrawer.tsx","pages/Admin/Dashboard/Adashboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { NavLink, Outlet } from 'react-router-dom'\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport ExitToAppIcon from '@mui/icons-material/ExitToApp';\r\nimport List from '@mui/material/List';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport { Avatar, ListItemButton } from '@mui/material';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { Home, ListAlt, PriceChange, VerifiedUser } from '@mui/icons-material';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst StyledNavLink = styled(NavLink)({\r\n  textDecoration: \"none\",\r\n  \"&.active\": {\r\n    background: \"#efefef\",\r\n  }\r\n})\r\n\r\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })<{\r\n  open?: boolean;\r\n}>(({ theme, open }) => ({\r\n  flexGrow: 1,\r\n  padding: theme.spacing(3),\r\n  transition: theme.transitions.create('margin', {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  marginLeft: `-${drawerWidth}px`,\r\n  ...(open && {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  }),\r\n}));\r\n\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(0, 1),\r\n  ...theme.mixins.toolbar,\r\n  justifyContent: 'flex-end'\r\n}));\r\n\r\nexport function Admindrawer(props: { adminDate: any; }) {\r\n  const { adminDate } = props\r\n  const nav = useNavigate()\r\n  const drawerpath = [{ name: 'Home', path: 'sspanel', icon:<Home/> }, { name: 'Product', path: 'product',icon:<PriceChange/> }, { name: 'Orders', path: 'orderlist',icon:<ListAlt/> }, { name: 'Users', path: 'userlist',icon:<VerifiedUser/> }]\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(op => !op);\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const logOut = () => {\r\n    localStorage.removeItem(\"admintoken\")\r\n    nav(\"/admin/login\")\r\n    handleCloseUserMenu()\r\n  }\r\n\r\n  const goToProfile = () => {\r\n    nav(\"/admin/dashboard/myprofile\")\r\n    handleCloseUserMenu()\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex' }}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton onClick={handleDrawerOpen} size=\"large\" edge=\"start\" color=\"inherit\" sx={{ mr: 2 }}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>Smart Store</Typography>\r\n          <Box>\r\n            <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n              {adminDate._id && (<Avatar alt=\"Remy Sharp\" {...stringAvatar(adminDate?.fullName)} />)}\r\n            </IconButton>\r\n            <Menu sx={{ mt: '45px' }} id=\"menu-appbar\" anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }} keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }} open={Boolean(anchorEl)} onClose={handleCloseUserMenu} >\r\n              <MenuItem onClick={goToProfile}>\r\n                <ListItemIcon>\r\n                  <AccountCircle />\r\n                </ListItemIcon>\r\n                <ListItemText>{\"My Profile\"}</ListItemText>\r\n              </MenuItem>\r\n              <MenuItem onClick={logOut}>\r\n                <ListItemIcon>\r\n                  <ExitToAppIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <ListItemText>{\"Log Out\"}</ListItemText>\r\n              </MenuItem>\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer sx={{\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        '& .MuiDrawer-paper': {\r\n          width: drawerWidth,\r\n          boxSizing: 'border-box',\r\n          zIndex: 0\r\n        },\r\n      }} variant=\"persistent\" anchor=\"left\" open={open}>\r\n        <DrawerHeader />\r\n        <Divider />\r\n        <List>\r\n          {\r\n            drawerpath.map((text, index) => (\r\n              <ListItem key={index} component={StyledNavLink} to={text.path} disablePadding>\r\n                <ListItemButton>\r\n                  <ListItemIcon>\r\n                    {text.icon}\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={text.name} />\r\n                </ListItemButton>\r\n              </ListItem>\r\n            ))\r\n          }\r\n        </List>\r\n      </Drawer>\r\n      <Main open={open}>\r\n        <DrawerHeader />\r\n        <Outlet />\r\n      </Main>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction stringToColor(string: string) {\r\n  let hash = 0;\r\n  let i;\r\n  for (i = 0; i < string?.length; i += 1) {\r\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  let color = '#';\r\n  for (i = 0; i < 3; i += 1) {\r\n    const value = (hash >> (i * 8)) & 0xff;\r\n    color += `00${value.toString(16)}`.slice(-2);\r\n  }\r\n  return color;\r\n}\r\n\r\nfunction stringAvatar(name: string) {\r\n  return {\r\n    sx: {\r\n      bgcolor: stringToColor(name),\r\n    },\r\n    children: `${name?.split(' ')[0][0]}${name?.split(' ')[1][0]}`,\r\n  };\r\n}","import { Admindrawer } from \"components/Admindrawer/Admindrawer\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { adminLoginVerify } from \"services/Adminservice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Adashboard = () => {\r\n    const nav = useNavigate()\r\n    const [adminDate, setAdminDate] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        (async function () {\r\n            if (localStorage.getItem(\"admintoken\")) {\r\n                const verify = await adminLoginVerify(String(localStorage.getItem(\"admintoken\")));\r\n                if (verify.data.status === \"Success\") {\r\n                    if (window.location.pathname.endsWith(\"dashboard\") || window.location.pathname.endsWith(\"dashboard/\")) {\r\n                        nav(\"/admin/dashboard/sspanel\")\r\n                    }\r\n                    setAdminDate(verify.data.data)\r\n                } else {\r\n                    nav(\"/admin/login\")\r\n                }\r\n            } else {\r\n                nav(\"/admin/login\")\r\n            }\r\n        })();\r\n    }, [nav])\r\n\r\n    return (\r\n        <Admindrawer adminDate={adminDate} />\r\n    )\r\n}\r\n\r\nexport default Adashboard;"],"names":["StyledNavLink","styled","NavLink","textDecoration","background","Main","shouldForwardProp","prop","_ref","theme","open","flexGrow","padding","spacing","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","concat","easeOut","enteringScreen","DrawerHeader","_ref2","display","alignItems","mixins","toolbar","justifyContent","Admindrawer","props","adminDate","nav","useNavigate","drawerpath","name","path","icon","_jsx","Home","PriceChange","ListAlt","VerifiedUser","setOpen","useState","anchorEl","setAnchorEl","handleCloseUserMenu","_jsxs","Box","sx","children","CssBaseline","AppBar","position","Toolbar","IconButton","onClick","handleDrawerOpen","op","size","edge","color","mr","MenuIcon","Typography","variant","component","event","currentTarget","p","_id","Avatar","alt","fullName","bgcolor","stringToColor","split","Menu","mt","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","onClose","MenuItem","goToProfile","ListItemIcon","AccountCircle","ListItemText","logOut","localStorage","removeItem","ExitToAppIcon","fontSize","Drawer","width","flexShrink","boxSizing","zIndex","anchor","Divider","List","map","text","index","ListItem","to","disablePadding","ListItemButton","primary","Outlet","string","i","hash","length","charCodeAt","toString","slice","Adashboard","setAdminDate","useEffect","getItem","verify","adminLoginVerify","String","data","status","window","location","pathname","endsWith"],"sourceRoot":""}