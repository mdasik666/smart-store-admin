{"version":3,"file":"static/js/809.7367f59e.chunk.js","mappings":"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","sources":["custom/components/SnackbarAlert.tsx","pages/User/Login/Ulogin.tsx","services/Userservice.tsx"],"sourcesContent":["import { Alert, Snackbar } from \"@mui/material\";\r\n\r\nconst SnackbarAlert = (props: any) => {\r\n  const { snackopen, setSnackOpen } = props\r\n  \r\n  const handleClose = (_event?: React.SyntheticEvent | Event, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setSnackOpen({ open: false, severity: undefined, message: \"\" });\r\n  };\r\n  return (\r\n    snackopen.open && <Snackbar open={snackopen.open} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\r\n      <Alert onClose={handleClose} severity={snackopen.severity} sx={{ width: '100%' }}>\r\n        {snackopen.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default SnackbarAlert;","import { useState, useEffect, ChangeEvent } from 'react';\r\nimport { userLogin, userLoginVerify } from \"services/Userservice\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useForm, FieldValues } from \"react-hook-form\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport SnackbarAlert from \"custom/components/SnackbarAlert\";\r\nimport { IPropsError } from \"../../Interface\";\r\nimport { AxiosError } from 'axios';\r\nimport CryptoJS from 'crypto-js'\r\n\r\nconst Ulogin = () => {\r\n  const { register, handleSubmit, formState: { errors, isValid }, setValue } = useForm({\r\n    mode: \"onChange\"\r\n  })\r\n\r\n  const nav = useNavigate()\r\n  const [isLoading, setLoading] = useState<boolean>(false)\r\n  const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n  const [snackopen, setSnackOpen] = useState<IPropsError>({ open: false, severity: undefined, message: \"\" })\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      if (localStorage.getItem(\"usertoken\")) {\r\n        try {\r\n          const verify = await userLoginVerify(String(localStorage.getItem(\"usertoken\")));\r\n          if (verify.data.status === \"Success\") {\r\n            nav(\"/user/dashboard/\")\r\n          }\r\n        } catch (error: unknown) {\r\n          setSnackOpen({ open: true, severity: \"warning\", message: (error as AxiosError).message })\r\n        }\r\n      }else{\r\n        if(localStorage.getItem(\"ss_user_data\")){\r\n          setRememberMe(true)          \r\n          const rememberData = decryptData(String(localStorage.getItem(\"ss_user_data\")))\r\n          setValue(\"email\",rememberData.email)\r\n          setValue(\"password\",rememberData.password)\r\n        }else{\r\n          setRememberMe(false)          \r\n        }        \r\n      }\r\n    })();\r\n  }, [nav])\r\n\r\n  const loginValidate = async (data: FieldValues) => {\r\n    try {\r\n      setLoading(true)\r\n      const res = await userLogin(data)\r\n      if (res.data.status === \"Success\") {\r\n        if (rememberMe) {\r\n          localStorage.setItem(\"ss_user_data\", encryptData(JSON.stringify({ email: data.email, password: data.password })))\r\n        }else{\r\n          localStorage.removeItem(\"ss_user_data\")\r\n        }\r\n        localStorage.setItem(\"usertoken\", res.data.token)\r\n        nav(\"/user/dashboard/\")\r\n      } else {\r\n        setSnackOpen({ open: true, severity: \"error\", message: res.data.message })\r\n      }\r\n      setLoading(false)\r\n    } catch (error: unknown) {\r\n      setSnackOpen({ open: true, severity: \"warning\", message: (error as AxiosError).message })\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Login</title>\r\n        <link rel=\"stylesheet\" href=\"/assets/css/Login.css\" />\r\n      </Helmet>\r\n      <section id=\"login\">\r\n        <div className=\"logWrapper\">\r\n          <div className=\"login-wrap pt-5 pb-3\">\r\n            <div className=\"img d-flex align-items-center justify-content-center\"\r\n              style={{ backgroundImage: \"url(/assets/images/logo.png)\" }}></div>\r\n            <h1 className=\"text-left mb-0\">Login</h1>\r\n            <p className=\"text-left\">Enter your username and password\r\n              to get access your account\r\n            </p>\r\n            <form onSubmit={handleSubmit(loginValidate)} className=\"login-form\">\r\n              <div className=\"Wrap_white\">\r\n                <div className=\"form-group\">\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"usermail\" className=\"form-label text-bold\">Login</label>\r\n                    <input type=\"email\" {...register(\"email\", { required: \"Email is mandatory\" })} className=\"form-control\" id=\"usermail\" placeholder=\"youremail@mail.com\" />\r\n                    {Boolean(errors?.email) && <small className=\"form-text text-danger\" style={{ color: \"red 1important\" }}>{errors?.email && errors.email?.message?.toString()}</small>}\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"userpass\" className=\"form-label text-bold\">Password</label>\r\n                    <input type=\"password\" {...register(\"password\", { required: \"Password is mandatory\" })} className=\"form-control\" id=\"userpass\" placeholder=\"********\" />\r\n                    {Boolean(errors?.password) && <small className=\"form-text text-danger\" style={{ color: \"red !important\" }}>{errors?.password && errors.password?.message?.toString()}</small>}\r\n                  </div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-between align-items-center rememberWrap\">\r\n                  <div className=\"form-check mb-0\">\r\n                    <input className=\"form-check-input me-2\" type=\"checkbox\" checked={rememberMe} id=\"rememberMe\" onChange={(e: ChangeEvent<HTMLInputElement>) => setRememberMe(e.target.checked)} />\r\n                    <label className=\"form-check-label\" htmlFor=\"rememberMe\">\r\n                      Remember me\r\n                    </label>\r\n                  </div>\r\n                  <Link to={\"/user/forgotpassword\"} className=\"text-body\">Forgot password</Link>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between align-items-center mt-4 pt-2\" id=\"btnsWrap\">\r\n                <Link to=\"/user/register\" className=\"btn btn-secondary btn-lg\">Sign Up</Link>\r\n                <button type=\"submit\" id=\"loginBrn\" disabled={isLoading || !isValid} className=\"btn btn-primary btn-lg\">Login</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <SnackbarAlert snackopen={snackopen} setSnackOpen={setSnackOpen} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst encryptData = (encdata: string, secretPass:string=\"ss_user\") => {\r\n  return CryptoJS.AES.encrypt(\r\n    encdata,\r\n    secretPass\r\n  ).toString();\r\n};\r\n\r\nconst decryptData = (decdata: string, secretPass:string=\"ss_user\") => {\r\n  const bytes = CryptoJS.AES.decrypt(decdata, secretPass);\r\n  return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));  \r\n};\r\n\r\nexport default Ulogin;","import { IPropsOrders } from \"pages/Interface\"\r\nimport axiosInstance from \"./axiosInstance\"\r\n\r\nexport const userRegister = async (emailtoken: string, data: object) => {\r\n    return await axiosInstance.post(`/user/register/${emailtoken}`, data)\r\n}\r\n\r\nexport const userLogin = async (data: object) => {\r\n    return await axiosInstance.post('/user/login', data)\r\n}\r\n\r\nexport const userLoginVerify = async (token: string) => {\r\n    return await axiosInstance.get(`/user/dashboard/${token}`)\r\n}\r\n\r\nexport const userGetAllProducts = async () => {\r\n    return await axiosInstance.get(`/user/getproducts`)\r\n}\r\n\r\nexport const userGetProducts = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/getproducts/${userId}`)\r\n}\r\n\r\nexport const userOTPVerify = async (email: string) => {\r\n    return await axiosInstance.get(`/user/verifyotp/${email}`)\r\n}\r\n\r\nexport const userGetCategoryList = async () => {\r\n    return await axiosInstance.get(`/user/productcategory`)\r\n}\r\n\r\nexport const userAddOrDeleteWishList = async (userId: string, prodId: string) => {\r\n    return await axiosInstance.get(`/user/addordeletewishlist/${userId}/${prodId}`)\r\n}\r\n\r\nexport const userAddOrDeleteCart = async (userId: string, prodId: string) => {\r\n    return await axiosInstance.get(`/user/addordeletecart/${userId}/${prodId}`)\r\n}\r\n\r\nexport const userGetWishList = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/getwishlist/${userId}`)\r\n}\r\n\r\nexport const userGetCart = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/getcart/${userId}`)\r\n}\r\n\r\nexport const userProfileupdate = async (userId: string, data: object) => {\r\n    return await axiosInstance.put(`/user/profileupdate/${userId}`, data)\r\n}\r\n\r\nexport const userPostCheckOut = async (userId: string, data: object) => {\r\n    return await axiosInstance.post(`/user/checkout/${userId}`, data)\r\n}\r\n\r\nexport const userGetCheckOut = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/checkout/${userId}`)\r\n}\r\n\r\nexport const userGetCountryList = async () => {\r\n    return await axiosInstance.get(`https://restcountries.com/v3.1/all`)\r\n}\r\n\r\nexport const userGetShippingAddress = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/shipping/${userId}`)\r\n}\r\n\r\nexport const userPostShippingAddress = async (userId: string, data: object) => {\r\n    return await axiosInstance.post(`/user/shipping/${userId}`, data)\r\n}\r\n\r\nexport const userPaymentOrders = async (data: object) => {\r\n    return await axiosInstance.post(`/user/payment/orders`, data)\r\n}\r\n\r\nexport const userPaymentVerify = async (userId: string, data: object) => {\r\n    return await axiosInstance.post(`/user/payment/verify/${userId}`, data)\r\n}\r\n\r\nexport const userForgotPassword = async (userEmail: string) => {\r\n    return await axiosInstance.get(`/user/forgotpassword/${userEmail}`)\r\n}\r\n\r\nexport const userVerifyForgotPassword = async (forgottoken: string) => {\r\n    return await axiosInstance.get(`/user/verifyforgotpassword/${forgottoken}`)\r\n}\r\n\r\nexport const userUpdatePassword = async (data: object) => {\r\n    return await axiosInstance.post(`/user/updatepassword/`, data)\r\n}\r\n\r\nexport const userOrderList = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/orderlist/${userId}`)\r\n}\r\n\r\nexport const userGetOrder = async (id: string) => {\r\n    return await axiosInstance.get(`/user/getorder/${id}`)\r\n}\r\n\r\nexport const userDownloadInvoice = async (data: IPropsOrders) => {\r\n    return await axiosInstance.post(`/user/downloadinvoice`, { orderData: data }, {\r\n        responseType: 'blob',\r\n    })\r\n}\r\n"],"names":["props","snackopen","setSnackOpen","handleClose","_event","reason","open","severity","undefined","message","_jsx","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","children","Alert","sx","width","encryptData","encdata","secretPass","arguments","length","CryptoJS","encrypt","toString","decryptData","decdata","bytes","decrypt","JSON","parse","Utf8","Ulogin","_errors$email","_errors$email$message","_errors$password","_errors$password$mess","register","handleSubmit","formState","errors","isValid","setValue","useForm","mode","nav","useNavigate","isLoading","setLoading","useState","rememberMe","setRememberMe","useEffect","localStorage","getItem","userLoginVerify","String","data","status","error","rememberData","email","password","_jsxs","_Fragment","Helmet","rel","href","id","className","style","backgroundImage","onSubmit","async","res","userLogin","setItem","stringify","removeItem","token","htmlFor","type","required","placeholder","Boolean","color","checked","onChange","e","target","Link","to","disabled","SnackbarAlert","userRegister","emailtoken","axiosInstance","post","concat","get","userGetAllProducts","userGetProducts","userId","userOTPVerify","userGetCategoryList","userAddOrDeleteWishList","prodId","userAddOrDeleteCart","userGetCart","userProfileupdate","put","userPostCheckOut","userGetCheckOut","userGetCountryList","userGetShippingAddress","userPostShippingAddress","userPaymentOrders","userPaymentVerify","userForgotPassword","userEmail","userVerifyForgotPassword","forgottoken","userUpdatePassword","userOrderList","userGetOrder","userDownloadInvoice","orderData","responseType"],"sourceRoot":""}