{"version":3,"file":"static/js/314.6e60d051.chunk.js","mappings":"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","sources":["pages/Admin/Panel/Adminpanel.tsx","../node_modules/@mui/material/styles/getOverlayAlpha.js","../node_modules/@mui/material/Paper/paperClasses.js","../node_modules/@mui/material/Paper/Paper.js"],"sourcesContent":["import { Paper, Stack } from \"@mui/material\";\r\n\r\nconst Sspanel = () => {    \r\n    return (\r\n        <Stack spacing={2} direction=\"row\" width={\"100%\"} height={\"100%\"} alignItems={\"center\"} justifyContent={\"center\"}>\r\n          <Paper sx={{p:2}}>\r\n            Total Products\r\n          </Paper>\r\n          <Paper sx={{p:2}}>\r\n            Total Invoices\r\n          </Paper>\r\n          <Paper sx={{p:2}}>\r\n            Total Uers\r\n          </Paper>\r\n        </Stack>\r\n    )\r\n}\r\n\r\nexport default Sspanel;","// Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\nconst getOverlayAlpha = elevation => {\n  let alphaValue;\n  if (elevation < 1) {\n    alphaValue = 5.11916 * elevation ** 2;\n  } else {\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\n  }\n  return (alphaValue / 100).toFixed(2);\n};\nexport default getOverlayAlpha;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getPaperUtilityClass(slot) {\n  return generateUtilityClass('MuiPaper', slot);\n}\nconst paperClasses = generateUtilityClasses('MuiPaper', ['root', 'rounded', 'outlined', 'elevation', 'elevation0', 'elevation1', 'elevation2', 'elevation3', 'elevation4', 'elevation5', 'elevation6', 'elevation7', 'elevation8', 'elevation9', 'elevation10', 'elevation11', 'elevation12', 'elevation13', 'elevation14', 'elevation15', 'elevation16', 'elevation17', 'elevation18', 'elevation19', 'elevation20', 'elevation21', 'elevation22', 'elevation23', 'elevation24']);\nexport default paperClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"elevation\", \"square\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport getOverlayAlpha from '../styles/getOverlayAlpha';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport { getPaperUtilityClass } from './paperClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    square,\n    elevation,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, !square && 'rounded', variant === 'elevation' && `elevation${elevation}`]\n  };\n  return composeClasses(slots, getPaperUtilityClass, classes);\n};\nconst PaperRoot = styled('div', {\n  name: 'MuiPaper',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], !ownerState.square && styles.rounded, ownerState.variant === 'elevation' && styles[`elevation${ownerState.elevation}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$vars$overlays;\n  return _extends({\n    backgroundColor: (theme.vars || theme).palette.background.paper,\n    color: (theme.vars || theme).palette.text.primary,\n    transition: theme.transitions.create('box-shadow')\n  }, !ownerState.square && {\n    borderRadius: theme.shape.borderRadius\n  }, ownerState.variant === 'outlined' && {\n    border: `1px solid ${(theme.vars || theme).palette.divider}`\n  }, ownerState.variant === 'elevation' && _extends({\n    boxShadow: (theme.vars || theme).shadows[ownerState.elevation]\n  }, !theme.vars && theme.palette.mode === 'dark' && {\n    backgroundImage: `linear-gradient(${alpha('#fff', getOverlayAlpha(ownerState.elevation))}, ${alpha('#fff', getOverlayAlpha(ownerState.elevation))})`\n  }, theme.vars && {\n    backgroundImage: (_theme$vars$overlays = theme.vars.overlays) == null ? void 0 : _theme$vars$overlays[ownerState.elevation]\n  }));\n});\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPaper'\n  });\n  const {\n      className,\n      component = 'div',\n      elevation = 1,\n      square = false,\n      variant = 'elevation'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    elevation,\n    square,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const theme = useTheme();\n    if (theme.shadows[elevation] === undefined) {\n      console.error([`MUI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \\`theme.shadows[${elevation}]\\` is defined.`].join('\\n'));\n    }\n  }\n  return /*#__PURE__*/_jsx(PaperRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   * @default 1\n   */\n  elevation: chainPropTypes(integerPropType, props => {\n    const {\n      elevation,\n      variant\n    } = props;\n    if (elevation > 0 && variant === 'outlined') {\n      return new Error(`MUI: Combining \\`elevation={${elevation}}\\` with \\`variant=\"${variant}\"\\` has no effect. Either use \\`elevation={0}\\` or use a different \\`variant\\`.`);\n    }\n    return null;\n  }),\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'elevation'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['elevation', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Paper;"],"names":["Sspanel","_jsxs","Stack","spacing","direction","width","height","alignItems","justifyContent","children","_jsx","Paper","sx","p","elevation","alphaValue","Math","log","toFixed","getPaperUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","PaperRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","square","rounded","concat","_ref","theme","_theme$vars$overlays","_extends","backgroundColor","vars","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","boxShadow","shadows","mode","backgroundImage","alpha","getOverlayAlpha","overlays","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}