{"version":3,"file":"static/js/447.9e25bff1.chunk.js","mappings":"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","sources":["custom/components/SnackbarAlert.tsx","pages/User/Register/Uregister.tsx","services/Userservice.tsx"],"sourcesContent":["import { Alert, Snackbar } from \"@mui/material\";\r\n\r\nconst SnackbarAlert = (props: any) => {\r\n  const { snackopen, setSnackOpen } = props\r\n  \r\n  const handleClose = (_event?: React.SyntheticEvent | Event, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setSnackOpen({ open: false, severity: undefined, message: \"\" });\r\n  };\r\n  return (\r\n    snackopen.open && <Snackbar open={snackopen.open} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\r\n      <Alert onClose={handleClose} severity={snackopen.severity} sx={{ width: '100%' }}>\r\n        {snackopen.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default SnackbarAlert;","import { useState } from 'react';\r\nimport { userOTPVerify, userRegister } from \"services/Userservice\";\r\nimport { useForm, FieldValues } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport SnackbarAlert from \"custom/components/SnackbarAlert\";\r\nimport { IPropsError } from \"../../Interface\";\r\nimport { AxiosError } from 'axios';\r\n\r\nconst Uregister = () => {\r\n  const { register, handleSubmit, formState: { errors, isValid }, reset, getValues } = useForm({\r\n    mode: \"onChange\"\r\n  })\r\n\r\n  const [isLoading, setLoading] = useState<boolean>(false)\r\n  const [snackopen, setSnackOpen] = useState<IPropsError>({ open: false, severity: undefined, message: \"\" })\r\n  const [otpVerified, setOtpVerified] = useState<boolean>(false)\r\n\r\n  const registerValidate = async (data: FieldValues) => {\r\n    try {\r\n      setLoading(true)\r\n      let res = await userRegister(String(localStorage.getItem(\"emailtoken\")),data)\r\n      if (res.data.status === \"Failed\") {\r\n        setSnackOpen({ open: true, severity: \"error\", message: res.data.message })\r\n      } else {\r\n        setSnackOpen({ open: true, severity: \"success\", message: res.data.message })\r\n        setOtpVerified(false)\r\n        reset();\r\n      }\r\n      setLoading(false)\r\n    } catch (error: unknown) {\r\n      setSnackOpen({ open: true, severity: \"warning\", message: (error as AxiosError).message })\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  \r\n  const sendOTP = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const res = await userOTPVerify(getValues(\"email\"))\r\n      if (res.data.status === \"Success\") {\r\n        setOtpVerified(true)\r\n        localStorage.setItem(\"emailtoken\",res.data.token)        \r\n        setSnackOpen({ open: true, severity: \"success\", message: res.data.message })\r\n      } else {\r\n        setOtpVerified(false)\r\n        setSnackOpen({ open: true, severity: \"error\", message: res.data.message })\r\n      }\r\n      setLoading(false)\r\n    } catch (error: unknown) {\r\n      setSnackOpen({ open: true, severity: \"warning\", message: (error as AxiosError).message })\r\n      setOtpVerified(false)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Register</title>\r\n        <link rel=\"stylesheet\" href=\"/assets/css/Register.css\" />\r\n      </Helmet>\r\n      <section id=\"register\">\r\n        <div className=\"logWrapper\">\r\n          <div className=\"register-wrap pt-5 pb-3\">\r\n            <Link id=\"backtoLogin\" to={\"/user/login\"}>\r\n              <img src=\"/assets/images/arrow-left.svg\" alt=\"back Arrow\" />\r\n            </Link>\r\n            <h1 className=\"text-left mb-0\">SIGN UP</h1>\r\n            <p className=\"text-left\">\r\n              Enter your informations to get activate your account\r\n            </p>\r\n            <form onSubmit={handleSubmit(registerValidate)} className=\"register-form\">\r\n              <div className=\"Wrap_white\">\r\n                <div className=\"form-group\">\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"rName\" className=\"form-label text-bold\">Name</label>\r\n                    <input type=\"text\" {...register(\"fullName\", { required: \"Name is mandatory\" })} className=\"form-control\" id=\"rName\" placeholder=\"Your Name\" />\r\n                    {Boolean(errors?.fullName) && <small className=\"form-text text-danger\" style={{ color: \"red !important\" }}>{errors?.fullName && errors.fullName?.message?.toString()}</small>}\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group d-flex align-items-end flex-row\">\r\n                  <div className=\"mb-3 flex-grow-1\">\r\n                    <label htmlFor=\"rEmail\" className=\"form-label text-bold\">Email</label>\r\n                    <input type=\"email\" {...register(\"email\", { required: \"Email is mandatory\" })} className=\"form-control\" id=\"rEmail\" placeholder=\"youremail@mail.com\" />\r\n                    {Boolean(errors?.email) && <small className=\"form-text text-danger\" style={{ color: \"red !important\" }}>{errors?.email && errors.email?.message?.toString()}</small>}\r\n                  </div>\r\n                  <div className=\"ps-2 mb-3\">\r\n                    <button type=\"button\" className=\"btn btn-secondary btn-lg\" disabled={isLoading} onClick={sendOTP}>OTP</button>\r\n                  </div>\r\n                </div>\r\n                {\r\n                  otpVerified &&\r\n                  <div className=\"form-group\">\r\n                    <div className=\"mb-3\">\r\n                      <label htmlFor=\"otpEmail\" className=\"form-label text-bold\">OTP</label>\r\n                      <input type=\"text\" {...register(\"otp\", { required: \"OTP is mandatory\" })} className=\"form-control\" id=\"otpEmail\" placeholder=\"xxxxxx\" />\r\n                      {Boolean(errors?.otp) && <small className=\"form-text text-danger\" style={{ color: \"red !important\" }}>{errors?.otp && errors.otp?.message?.toString()}</small>}\r\n                    </div>\r\n                  </div>\r\n                }\r\n                <div className=\"form-group\">\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"rMobile\" className=\"form-label text-bold\">Mobile No.</label>\r\n                    <input type=\"text\" {...register(\"phoneNumber\", { required: \"Phone Number is mandatory\", minLength: { value: 10, message: \"Phone Number must be exactly 10 characters\" } })} className=\"form-control\" id=\"rMobile\" placeholder=\"99999 99999\" />\r\n                    {Boolean(errors?.phoneNumber) && <small className=\"form-text text-danger\" style={{ color: \"red !important\" }}>{errors?.phoneNumber && errors.phoneNumber?.message?.toString()}</small>}\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"rPassword\" className=\"form-label text-bold\">Password</label>\r\n                    <input type=\"text\" {...register(\"password\", { required: \"Password is mandatory\" })} className=\"form-control\" id=\"rPassword\" placeholder=\"********\" />\r\n                    {Boolean(errors?.password) && <small className=\"form-text text-danger\" style={{ color: \"red !important\" }}>{errors?.password && errors.password?.message?.toString()}</small>}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between align-items-center mt-4 pt-2\" id=\"btnsWrap\">\r\n                <button type=\"reset\" disabled={isLoading} className=\"btn btn-secondary btn-lg\">Reset</button>\r\n                <button type=\"submit\" disabled={isLoading || !isValid || !otpVerified} className=\"btn btn-primary btn-lg\">Register</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <SnackbarAlert snackopen={snackopen} setSnackOpen={setSnackOpen} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Uregister;","import { IPropsOrders } from \"pages/Interface\"\r\nimport axiosInstance from \"./axiosInstance\"\r\n\r\nexport const userRegister = async (emailtoken: string, data: object) => {\r\n    return await axiosInstance.post(`/user/register/${emailtoken}`, data)\r\n}\r\n\r\nexport const userLogin = async (data: object) => {\r\n    return await axiosInstance.post('/user/login', data)\r\n}\r\n\r\nexport const userLoginVerify = async (token: string) => {\r\n    return await axiosInstance.get(`/user/dashboard/${token}`)\r\n}\r\n\r\nexport const userGetAllProducts = async () => {\r\n    return await axiosInstance.get(`/user/getproducts`)\r\n}\r\n\r\nexport const userGetProducts = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/getproducts/${userId}`)\r\n}\r\n\r\nexport const userOTPVerify = async (email: string) => {\r\n    return await axiosInstance.get(`/user/verifyotp/${email}`)\r\n}\r\n\r\nexport const userGetCategoryList = async () => {\r\n    return await axiosInstance.get(`/user/productcategory`)\r\n}\r\n\r\nexport const userAddOrDeleteWishList = async (userId: string, prodId: string) => {\r\n    return await axiosInstance.get(`/user/addordeletewishlist/${userId}/${prodId}`)\r\n}\r\n\r\nexport const userAddOrDeleteCart = async (userId: string, prodId: string) => {\r\n    return await axiosInstance.get(`/user/addordeletecart/${userId}/${prodId}`)\r\n}\r\n\r\nexport const userGetWishList = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/getwishlist/${userId}`)\r\n}\r\n\r\nexport const userGetCart = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/getcart/${userId}`)\r\n}\r\n\r\nexport const userProfileupdate = async (userId: string, data: object) => {\r\n    return await axiosInstance.put(`/user/profileupdate/${userId}`, data)\r\n}\r\n\r\nexport const userPostCheckOut = async (userId: string, data: object) => {\r\n    return await axiosInstance.post(`/user/checkout/${userId}`, data)\r\n}\r\n\r\nexport const userGetCheckOut = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/checkout/${userId}`)\r\n}\r\n\r\nexport const userGetCountryList = async () => {\r\n    return await axiosInstance.get(`https://restcountries.com/v3.1/all`)\r\n}\r\n\r\nexport const userGetShippingAddress = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/shipping/${userId}`)\r\n}\r\n\r\nexport const userPostShippingAddress = async (userId: string, data: object) => {\r\n    return await axiosInstance.post(`/user/shipping/${userId}`, data)\r\n}\r\n\r\nexport const userPaymentOrders = async (data: object) => {\r\n    return await axiosInstance.post(`/user/payment/orders`, data)\r\n}\r\n\r\nexport const userPaymentVerify = async (userId: string, data: object) => {\r\n    return await axiosInstance.post(`/user/payment/verify/${userId}`, data)\r\n}\r\n\r\nexport const userForgotPassword = async (userEmail: string) => {\r\n    return await axiosInstance.get(`/user/forgotpassword/${userEmail}`)\r\n}\r\n\r\nexport const userVerifyForgotPassword = async (forgottoken: string) => {\r\n    return await axiosInstance.get(`/user/verifyforgotpassword/${forgottoken}`)\r\n}\r\n\r\nexport const userUpdatePassword = async (data: object) => {\r\n    return await axiosInstance.post(`/user/updatepassword/`, data)\r\n}\r\n\r\nexport const userOrderList = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/orderlist/${userId}`)\r\n}\r\n\r\nexport const userGetOrder = async (id: string) => {\r\n    return await axiosInstance.get(`/user/getorder/${id}`)\r\n}\r\n\r\nexport const userDownloadInvoice = async (data: IPropsOrders) => {\r\n    return await axiosInstance.post(`/user/downloadinvoice`, { orderData: data }, {\r\n        responseType: 'blob',\r\n    })\r\n}\r\n"],"names":["props","snackopen","setSnackOpen","handleClose","_event","reason","open","severity","undefined","message","_jsx","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","children","Alert","sx","width","Uregister","_errors$fullName","_errors$fullName$mess","_errors$email","_errors$email$message","_errors$otp","_errors$otp$message","_errors$phoneNumber","_errors$phoneNumber$m","_errors$password","_errors$password$mess","register","handleSubmit","formState","errors","isValid","reset","getValues","useForm","mode","isLoading","setLoading","useState","otpVerified","setOtpVerified","_jsxs","_Fragment","Helmet","rel","href","id","className","Link","to","src","alt","onSubmit","async","res","userRegister","String","localStorage","getItem","data","status","error","htmlFor","type","required","placeholder","Boolean","fullName","style","color","toString","email","disabled","onClick","userOTPVerify","setItem","token","otp","minLength","value","phoneNumber","password","SnackbarAlert","emailtoken","axiosInstance","post","concat","userLogin","userLoginVerify","get","userGetAllProducts","userGetProducts","userId","userGetCategoryList","userAddOrDeleteWishList","prodId","userAddOrDeleteCart","userGetCart","userProfileupdate","put","userPostCheckOut","userGetCheckOut","userGetCountryList","userGetShippingAddress","userPostShippingAddress","userPaymentOrders","userPaymentVerify","userForgotPassword","userEmail","userVerifyForgotPassword","forgottoken","userUpdatePassword","userOrderList","userGetOrder","userDownloadInvoice","orderData","responseType"],"sourceRoot":""}