{"version":3,"file":"static/js/31.3292715b.chunk.js","mappings":"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","sources":["custom/components/SnackbarAlert.tsx","pages/User/Reset/Ureset.tsx","services/Userservice.tsx"],"sourcesContent":["import { Alert, Snackbar } from \"@mui/material\";\r\n\r\nconst SnackbarAlert = (props: any) => {\r\n  const { snackopen, setSnackOpen } = props\r\n  \r\n  const handleClose = (_event?: React.SyntheticEvent | Event, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setSnackOpen({ open: false, severity: undefined, message: \"\" });\r\n  };\r\n  return (\r\n    snackopen.open && <Snackbar open={snackopen.open} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\r\n      <Alert onClose={handleClose} severity={snackopen.severity} sx={{ width: '100%' }}>\r\n        {snackopen.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default SnackbarAlert;","import { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useForm, FieldValues } from 'react-hook-form'\r\nimport { userUpdatePassword, userVerifyForgotPassword } from \"services/Userservice\";\r\nimport SnackbarAlert from \"custom/components/SnackbarAlert\";\r\nimport { IPropsError, IPropsUserData } from \"../../Interface\";\r\nimport { AxiosError } from \"axios\";\r\n\r\nconst Ureset = () => {\r\n  const nav = useNavigate()\r\n  const { handleSubmit, register, formState: { errors, isValid }, getValues } = useForm({\r\n    mode: \"onChange\",\r\n  })\r\n  const [userData, setUserData] = useState<Pick<IPropsUserData,'email'>>({} as IPropsUserData)\r\n  const [isLoading, setLoading] = useState<boolean>(false)\r\n  const [snackopen, setSnackOpen] = useState<IPropsError>({ open: false, severity: undefined, message: \"\" })\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      if (localStorage.getItem('forgottoken')) {\r\n        try {\r\n          setLoading(true)\r\n          const verify = await userVerifyForgotPassword(String(localStorage.getItem(\"forgottoken\")))\r\n          if (verify.data.status === \"Failed\") {\r\n            nav('/user/forgotpassword')\r\n          } else {\r\n            const  {email}:Pick<IPropsUserData,'email'> = verify.data.userData\r\n            setUserData({email})\r\n          }\r\n          setLoading(false)\r\n        } catch (error: unknown) {\r\n          setLoading(false)\r\n          setSnackOpen({ open: true, severity: \"warning\", message: (error as AxiosError).message })\r\n        }\r\n      } else {\r\n        nav('/user/forgotpassword')\r\n      }\r\n    })()\r\n  }, [nav])\r\n\r\n  const updatePassword = async (data: FieldValues) => {\r\n    try {\r\n      const update = await userUpdatePassword({ email: userData.email, password: data.password })\r\n      if (update.data.status === \"Success\") {\r\n        localStorage.removeItem(\"forgottoken\")\r\n        nav('/')\r\n      } else {\r\n        setSnackOpen({ open: true, severity: \"error\", message: update.data.messsage })\r\n      }\r\n    } catch (error: unknown) {\r\n      setSnackOpen({ open: true, severity: \"warning\", message: (error as AxiosError).message })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Reset</title>\r\n        <link rel=\"stylesheet\" href=\"/assets/css/Reset.css\" />\r\n      </Helmet>\r\n      <section id=\"login\">\r\n        <div className=\"logWrapper\">\r\n          <div className=\"login-wrap pt-5 pb-3\">\r\n            <div className=\"img d-flex align-items-center justify-content-center\"\r\n              style={{ backgroundImage: 'url(\"/assets/images/logo.png\")' }}></div>\r\n            <h1 className=\"text-left mb-0\">Reset Password</h1>\r\n            <form onSubmit={handleSubmit(updatePassword)} className=\"login-form\">\r\n              <div className=\"Wrap_white\">\r\n                <div className=\"form-group\">\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"forgotMail\" className=\"form-label text-bold\">New Password</label>\r\n                    <input {...register('password', { required: 'Password is mandatory' })} type=\"password\" className=\"form-control\" id=\"newPass\" placeholder=\"***************\" />\r\n                    {Boolean(errors?.password) && <small className=\"form-text text-danger\" style={{ color: \"red 1important\" }}>{errors?.password && errors.password?.message?.toString()}</small>}\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"forgotMail\" className=\"form-label text-bold\">Confirm New Password</label>\r\n                    <input {...register('confirmPassword', {\r\n                      required: 'Confirm password is mandatory',\r\n                      validate: (data) => {\r\n                        if (data !== getValues('password')) {\r\n                          return \"Password not matched\"\r\n                        }\r\n                      }\r\n                    })} type=\"password\" className=\"form-control\" id=\"newConPass\" placeholder=\"***************\" />\r\n                    {Boolean(errors?.confirmPassword) && <small className=\"form-text text-danger\" style={{ color: \"red 1important\" }}>{errors?.confirmPassword && errors.confirmPassword?.message?.toString()}</small>}\r\n                  </div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center align-items-center mt-4 pt-2\" id=\"btnsWrap\">\r\n                  <button type=\"submit\" disabled={!isValid || isLoading} className=\"btn btn-primary btn-lg\">Reset Password</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <SnackbarAlert snackopen={snackopen} setSnackOpen={setSnackOpen} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Ureset;","import { IPropsOrders } from \"pages/Interface\"\r\nimport axiosInstance from \"./axiosInstance\"\r\n\r\nexport const userRegister = async (emailtoken: string, data: object) => {\r\n    return await axiosInstance.post(`/user/register/${emailtoken}`, data)\r\n}\r\n\r\nexport const userLogin = async (data: object) => {\r\n    return await axiosInstance.post('/user/login', data)\r\n}\r\n\r\nexport const userLoginVerify = async (token: string) => {\r\n    return await axiosInstance.get(`/user/dashboard/${token}`)\r\n}\r\n\r\nexport const userGetAllProducts = async () => {\r\n    return await axiosInstance.get(`/user/getproducts`)\r\n}\r\n\r\nexport const userGetProducts = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/getproducts/${userId}`)\r\n}\r\n\r\nexport const userOTPVerify = async (email: string) => {\r\n    return await axiosInstance.get(`/user/verifyotp/${email}`)\r\n}\r\n\r\nexport const userGetCategoryList = async () => {\r\n    return await axiosInstance.get(`/user/productcategory`)\r\n}\r\n\r\nexport const userAddOrDeleteWishList = async (userId: string, prodId: string) => {\r\n    return await axiosInstance.get(`/user/addordeletewishlist/${userId}/${prodId}`)\r\n}\r\n\r\nexport const userAddOrDeleteCart = async (userId: string, prodId: string) => {\r\n    return await axiosInstance.get(`/user/addordeletecart/${userId}/${prodId}`)\r\n}\r\n\r\nexport const userGetWishList = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/getwishlist/${userId}`)\r\n}\r\n\r\nexport const userGetCart = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/getcart/${userId}`)\r\n}\r\n\r\nexport const userProfileupdate = async (userId: string, data: object) => {\r\n    return await axiosInstance.put(`/user/profileupdate/${userId}`, data)\r\n}\r\n\r\nexport const userPostCheckOut = async (userId: string, data: object) => {\r\n    return await axiosInstance.post(`/user/checkout/${userId}`, data)\r\n}\r\n\r\nexport const userGetCheckOut = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/checkout/${userId}`)\r\n}\r\n\r\nexport const userGetCountryList = async () => {\r\n    return await axiosInstance.get(`https://restcountries.com/v3.1/all`)\r\n}\r\n\r\nexport const userGetShippingAddress = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/shipping/${userId}`)\r\n}\r\n\r\nexport const userPostShippingAddress = async (userId: string, data: object) => {\r\n    return await axiosInstance.post(`/user/shipping/${userId}`, data)\r\n}\r\n\r\nexport const userPaymentOrders = async (data: object) => {\r\n    return await axiosInstance.post(`/user/payment/orders`, data)\r\n}\r\n\r\nexport const userPaymentVerify = async (userId: string, data: object) => {\r\n    return await axiosInstance.post(`/user/payment/verify/${userId}`, data)\r\n}\r\n\r\nexport const userForgotPassword = async (userEmail: string) => {\r\n    return await axiosInstance.get(`/user/forgotpassword/${userEmail}`)\r\n}\r\n\r\nexport const userVerifyForgotPassword = async (forgottoken: string) => {\r\n    return await axiosInstance.get(`/user/verifyforgotpassword/${forgottoken}`)\r\n}\r\n\r\nexport const userUpdatePassword = async (data: object) => {\r\n    return await axiosInstance.post(`/user/updatepassword/`, data)\r\n}\r\n\r\nexport const userOrderList = async (userId: string) => {\r\n    return await axiosInstance.get(`/user/orderlist/${userId}`)\r\n}\r\n\r\nexport const userGetOrder = async (id: string) => {\r\n    return await axiosInstance.get(`/user/getorder/${id}`)\r\n}\r\n\r\nexport const userDownloadInvoice = async (data: IPropsOrders) => {\r\n    return await axiosInstance.post(`/user/downloadinvoice`, { orderData: data }, {\r\n        responseType: 'blob',\r\n    })\r\n}\r\n"],"names":["props","snackopen","setSnackOpen","handleClose","_event","reason","open","severity","undefined","message","_jsx","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","children","Alert","sx","width","Ureset","_errors$password","_errors$password$mess","_errors$confirmPasswo","_errors$confirmPasswo2","nav","useNavigate","handleSubmit","register","formState","errors","isValid","getValues","useForm","mode","userData","setUserData","useState","isLoading","setLoading","useEffect","localStorage","getItem","verify","userVerifyForgotPassword","String","data","status","email","error","_jsxs","_Fragment","Helmet","rel","href","id","className","style","backgroundImage","onSubmit","async","update","userUpdatePassword","password","removeItem","messsage","htmlFor","required","type","placeholder","Boolean","color","toString","validate","confirmPassword","disabled","SnackbarAlert","userRegister","emailtoken","axiosInstance","post","concat","userLogin","userLoginVerify","get","token","userGetAllProducts","userGetProducts","userId","userOTPVerify","userGetCategoryList","userAddOrDeleteWishList","prodId","userAddOrDeleteCart","userGetCart","userProfileupdate","put","userPostCheckOut","userGetCheckOut","userGetCountryList","userGetShippingAddress","userPostShippingAddress","userPaymentOrders","userPaymentVerify","userForgotPassword","userEmail","forgottoken","userOrderList","userGetOrder","userDownloadInvoice","orderData","responseType"],"sourceRoot":""}